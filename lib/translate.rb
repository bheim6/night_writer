class Translate
  attr_reader :input

  def initialize(input)
    @input = input
    @library = {"a" => ["0.", "..", ".."], "b" => ["0.", "0.", ".."],
                "c" => ["00", "..", ".."], "d" => ["00", ".0", ".."],
                "e" => ["0.", ".0", ".."], "f" => ["00", "0.", ".."],
                "g" => ["00", "00", ".."], "h" => ["0.", "00", ".."],
                "i" => [".0", "0.", ".."], "j" => [".0", "00", ".."],
                "k" => ["0.", "..", "0."], "l" => ["0.", "0.", "0."],
                "m" => ["00", "..", "0."], "n" => ["00", ".0", "0."],
                "o" => ["0.", ".0", "0."], "p" => ["00", "0.", "0."],
                "q" => ["00", "00", "0."], "r" => ["0.", "00", "0."],
                "s" => [".0", "0.", "0."], "t" => [".0", "00", "0."],
                "u" => ["0.", "..", "00"], "v" => ["0.", "0.", "00"],
                "w" => [".0", "00", ".0"], "x" => ["00", "..", "00"],
                "y" => ["00", ".0", "00"], "z" => ["0.", ".0", "00"],
                "'" => ["..", "..", "0."], "," => ["..", "0.", ".."],
                "-" => ["..", "..", "00"], "." => ["..", "00", ".0"],
                " " => ["..", "..", ".."], "!" => ["..", "00", "0."],
                "?" => ["..", "0.", "00"], "^" => ["..", "..", ".0"],
                "A" => ["..0.", "....", ".0.."], "B" => ["..0.", "..0.", ".0.."],
                "C" => ["..00", "....", ".0.."], "D" => ["..00", "...0", ".0.."],
                "E" => ["..0.", "...0", ".0.."], "F" => ["..00", "..0.", ".0.."],
                "G" => ["..00", "..00", ".0.."], "H" => ["..0.", "..00", ".0.."],
                "I" => ["...0", "..0.", ".0.."], "J" => ["...0", "..00", ".0.."],
                "K" => ["..0.", "....", ".00."], "L" => ["..0.", "..0.", ".00."],
                "M" => ["..00", "....", ".00."], "N" => ["..00", "...0", ".00."],
                "O" => ["..0.", "...0", ".00."], "P" => ["..00", "..0.", ".00."],
                "Q" => ["..00", "..00", ".00."], "R" => ["..0.", "..00", ".00."],
                "S" => ["...0", "..0.", ".00."], "T" => ["...0", "..00", ".00."],
                "U" => ["..0.", "....", ".000"], "V" => ["..0.", "..0.", ".000"],
                "W" => ["...0", "..00", ".0.0"], "X" => ["..00", "....", ".000"],
                "Y" => ["..00", "...0", ".000"], "Z" => ["..0.", "...0", ".000"],}

    @number_library  = {"#" => [".0", ".0", "00"], "0" => [".0", "00", ".."],
                        "1" => ["0.", "..", ".."], "2" => ["0.", "0.", ".."],
                        "3" => ["00", "..", ".."], "4" => ["00", ".0", ".."],
                        "5" => ["0.", ".0", ".."], "6" => ["00", "0.", ".."],
                        "7" => ["00", "00", ".."], "8" => ["0.", "00", ".."],
                        "9" => [".0", "0.", ".."]}
  end

  def format_numbers
    formatted_number = input.gsub(/[^0-9][0-9]/) do |number_match|
      number_match[0] + "#" + number_match[1]
    end
    formatted_number = formatted_number.gsub(/[0-9][^0-9]/) do |number_match|
      number_match[0] + " " + number_match[1]
    end
    if formatted_number.index(/[0-9]/) == 0
      formatted_number = "#" + formatted_number
    end
    if ("0".."9").include?(formatted_number[-1])
      formatted_number = formatted_number + " "
    end
    formatted_number
  end

  def convert_to_rows
    translated = format_numbers.chomp.chars.map do |char|
      if @number_library.include?(char)
        @number_library[char]
      else
        @library[char]
      end
    end
    translated.transpose.map do |characters|
      characters.join
    end
  end

  def translate_to_braille
    i = 0
    rows = convert_to_rows
     while i < rows.length
      if rows[i].length > 80
        rows[i + 3] = rows[i][80..-1]
        rows[i] = rows[i][0..79]
      end
      i += 1
    end
    rows.join("\n")
  end
end
