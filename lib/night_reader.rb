class NightReader

  attr_reader :input

  def initialize(input)
    @input = input
    @library = {"a" => ["0.", "..", ".."], "b" => ["0.", "0.", ".."],
                "c" => ["00", "..", ".."], "d" => ["00", ".0", ".."],
                "e" => ["0.", ".0", ".."], "f" => ["00", "0.", ".."],
                "g" => ["00", "00", ".."], "h" => ["0.", "00", ".."],
                "i" => [".0", "0.", ".."], "j" => [".0", "00", ".."],
                "k" => ["0.", "..", "0."], "l" => ["0.", "0.", "0."],
                "m" => ["00", "..", "0."], "n" => ["00", ".0", "0."],
                "o" => ["0.", ".0", "0."], "p" => ["00", "0.", "0."],
                "q" => ["00", "00", "0."], "r" => ["0.", "00", "0."],
                "s" => [".0", "0.", "0."], "t" => [".0", "00", "0."],
                "u" => ["0.", "..", "00"], "v" => ["0.", "0.", "00"],
                "w" => [".0", "00", ".0"], "x" => ["00", "..", "00"],
                "y" => ["00", ".0", "00"], "z" => ["0.", ".0", "00"],
                "'" => ["..", "..", "0."], "," => ["..", "0.", ".."],
                "-" => ["..", "..", "00"], "." => ["..", "00", ".0"],
                " " => ["..", "..", ".."], "!" => ["..", "00", "0."],
                "?" => ["..", "0.", "00"], "^" => ["..", "..", ".0"],
                "#" => [".0", ".0", "00"],
                "A" => ["..0.", "....", ".0.."], "B" => ["..0.", "..0.", ".0.."],
                "C" => ["..00", "....", ".0.."], "D" => ["..00", "...0", ".0.."],
                "E" => ["..0.", "...0", ".0.."], "F" => ["..00", "..0.", ".0.."],
                "G" => ["..00", "..00", ".0.."], "H" => ["..0.", "..00", ".0.."],
                "I" => ["...0", "..0.", ".0.."], "J" => ["...0", "..00", ".0.."],
                "K" => ["..0.", "....", ".00."], "L" => ["..0.", "..0.", ".00."],
                "M" => ["..00", "....", ".00."], "N" => ["..00", "...0", ".00."],
                "O" => ["..0.", "...0", ".00."], "P" => ["..00", "..0.", ".00."],
                "Q" => ["..00", "..00", ".00."], "R" => ["..0.", "..00", ".00."],
                "S" => ["...0", "..0.", ".00."], "T" => ["...0", "..00", ".00."],
                "U" => ["..0.", "....", ".000"], "V" => ["..0.", "..0.", ".000"],
                "W" => ["...0", "..00", ".0.0"], "X" => ["..00", "....", ".000"],
                "Y" => ["..00", "...0", ".000"], "Z" => ["..0.", "...0", ".000"],}

      @new_library = @library.invert
  end

  def convert_multiline(braille)
    braille_chars = ["", "", ""]
    braille.each_with_index do |char, index|
      braille_chars[index % 3] << char
    end
    braille_chars
  end

  def convert_to_characters
    split_braille = input.split("\n")
    braille_row = convert_multiline(split_braille)
    row_1 = braille_row[0].scan(/../)
    row_2 = braille_row[1].scan(/../)
    row_3 = braille_row[2].scan(/../)
    row_1.zip(row_2, row_3)
  end

  def convert_message
    letters = convert_to_characters
    words = letters.map do |letter|
      @new_library[letter]
    end
    words.join
  end

  def translate_to_english
    number_message = convert_message.gsub(/#\S+\s/) do |hashtag_match|
      hashtag_match[1..-2].tr('abcdefghij', '1234567890')
    end
    number_message.gsub(/\^[a-z]/) do |capital_pair|
      capital_pair[1].upcase
    end
  end

end
